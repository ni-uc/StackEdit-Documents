--Working with attachments:

function onSubmit() {
	var count = getSCAttachmentCount();
	if(g_form.getValue('youryesno field name') == 'yes'){
		if(count <= 0) {
			alert('Please attach your spreadsheet.');
			g_form.addErrorMessage('Please attach your spreadsheet.');
			return false;
		}
	}
}



Option 2: Using UI Script, JS Theme, and Client script
Here is other ways that you may have a look as well.

1. ADD A UI SCRIPT
       In the Left Navigator Bar, go to System UI > UI Scripts. Click New
        UI Script: GlobalCatalogItemFunctions
        Global: true
        Script:
        function getSCAttachmentCount() {
        var length;
        try {
                length = angular.element("#sc_cat_item").scope().attachments.length;
        } catch(e) {
        length = -1;
        }
        return length;
       }

2. ADD A JS THEME:

In the Left Navigator Bar, go to Service Portal > Portals
Click the Portal you want to adjust. It may be the one with URL suffix of "sp".
Click the "info" button for the Theme Field. The standard theme is "Stock"
Add your JS Include there
Create New JS Theme
               Display Name: GlobalCatalogItemFunctions
               UI Script: GlobalCatalogItemFunctions
3. CREATE A CATALOG CLIENT SCRIPT: For your catalog item you want to require attachments, use this client script.

function onSubmit() {
//Works in non-portal ui
try {
var attachments = document.getElementById('header_attachment_list_label');
if (attachments.style.visibility == 'hidden' || attachments.style.display == 'none' ) {
alert('You must attach the completed form before submitting this request.');
return false;
}
}
//For Service Portal
catch(e) {
var count = getSCAttachmentCount();
if(count <= 0) {
alert('You must attach the completed form before submitting this request.');
return false;
}
}
}


--Client Script at Record Producer level

function onChange(control, oldValue, newValue, isLoading) {
   if (isLoading || newValue == '') {
      return;
   }
alert('test');
//	alert(g_form.getValue('variable.role'));
  var ga = new GlideAjax('sn_customerservice.clientFieldAdminPanelRole');
	ga.addParam('sysparm_name', 'fetchingChoices');
	ga.addParam('sysparm_company_name', newValue);
	ga.addParam('sysparm_tble_name', 'Case');
	ga.getXML(WBSCode);
alert(newValue);
	function WBSCode(response) {
		var answer = response.responseXML.documentElement.getAttribute("answer");
		var a = JSON.parse(answer);
		var v = [];
alert('test2');
		alert(answer);
		
		g_form.setValue('first_name', newValue);
		if (a.u_role_values) {
				var d = g_form.getValue('role');
				g_form.clearOptions('role');
				g_form.addOption('role', '', '--None--');
				var s3 = a.u_role_values.split('|');
				for (var j = 0; j < s3.length; j++) {
					alert(s3[j]);
					g_form.addOption('role', s3[j], s3[j]);
				}
				if(d){
					g_form.setValue('role',d);
				}
			}
	}
   
}


--Adding choices, populating the Role field at a Variable set level:

function onLoad() {

    if (this.NOW.assetSysid == "" || this.NOW.assetSysid == undefined) {

        // alert('asset is not coming');

    } else {
        // alert("on the variable set" + this.NOW.assetSysid);

        //g_form.addOption('role', 'Role1', 'Role1');
        //g_form.addOption('role', 'Role2', 'Role2');

        //	alert(g_form.getValue('variable.role'));

        //Reading the Client Fields Admin table
        var ga = new GlideAjax('sn_customerservice.clientFieldAdminPanelRole');
        ga.addParam('sysparm_name', 'fetchingChoices');
        ga.addParam('sysparm_company_name', this.NOW.assetSysid);
        ga.addParam('sysparm_tble_name', 'Case');
        ga.getXML(WBSCode);
    }

    function WBSCode(response) {
        var answer = response.responseXML.documentElement.getAttribute("answer");
        var a = JSON.parse(answer);
        var v = [];
        //alert(answer);

        // g_form.setValue('first_name', newValue);
        if (a.u_role_values) {
            //  var d = g_form.getValue('role');
            //Clearing the Role values
            g_form.clearOptions('role');
            //Adding None as the first option
            g_form.addOption('role', '', '--None--');
            //Fetching all the values separated by piepline and passing the Role field 
            var s3 = a.u_role_values.split('|');
            for (var j = 0; j < s3.length; j++) {
                // alert(s3[j]);
                g_form.addOption('role', s3[j], s3[j]);
            }
            //                 if (d) {
            //                     g_form.setValue('role', d);
            //                 }
        }
    }
}
